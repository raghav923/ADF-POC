{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-input-sink"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_until_files_available')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until files are available",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get available trigger files",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_Get_Date_Folders",
											"type": "DatasetReference",
											"parameters": {
												"BlobName": {
													"value": "@pipeline().parameters.DataFolders",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Get Count",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Get available trigger files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "Declare @json1 nvarchar(max)\nSet @json1 = '@{activity('Get available trigger files').output.childItems}'\nselect count(*) as cnt from openjson(@json1)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Log File Entry Check",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(greater(activity('Get Count').output.firstRow.cnt,1))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "File Status Not Available",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[LogPipelineStatus]",
													"storedProcedureParameters": {
														"adfname": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipeline": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"runid": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"runstatus": {
															"value": "source files are not \navailable. Please wait until source files are available",
															"type": "String"
														},
														"runtime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_logdetailsSP",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "update flag false",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "File Status Not Available",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": "false"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Log File Status",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[LogPipelineStatus]",
													"storedProcedureParameters": {
														"adfname": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipeline": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"runid": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"runstatus": {
															"value": "source files are available \nfor processing",
															"type": "String"
														},
														"runtime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_logdetailsSP",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "update flag True",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Log File Status",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": "True"
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataFolders": {
						"type": "string"
					}
				},
				"variables": {
					"flag": {
						"type": "String",
						"defaultValue": "false"
					},
					"Check Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF POC"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_generate_adhoc_report')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Employee_SQL",
								"type": "DatasetReference"
							},
							"name": "Employee"
						},
						{
							"dataset": {
								"referenceName": "DS_Department",
								"type": "DatasetReference"
							},
							"name": "Department"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Generated_Report",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Empname as string,",
						"          Empid as string,",
						"          Salary as string,",
						"          Deptid as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Employee",
						"source(output(",
						"          DepartmenName as string,",
						"          Deptid as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Department",
						"Employee, Department join(Employee@Deptid == Department@Deptid,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 aggregate(groupBy(DepartmenName),",
						"     {Branch Count} = count(Empid)) ~> aggregate1",
						"aggregate1 select(mapColumn(",
						"          DepartmenName,",
						"          {Branch Count}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[(concat('Departmentcount.csv'))],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute_Pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_Input1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Waitactivity",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "input_csv_sink_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_Input1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "input_csv_sink_pl_copy1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Waitactivity1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "input_csv_sink_pl_pipe2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "input_csv_sink_pl_pipeline2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Waitactivity",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 90
						}
					},
					{
						"name": "Waitactivity1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 90
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-17T12:03:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_file_existance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata of files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_File_Check",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Check Latest Date Blob",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().name,formatDateTime(utcNow(),'yyyyMMdd')))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Latest Date Folder is not available",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[LogPipelineStatus]",
													"storedProcedureParameters": {
														"adfname": {
															"value": {
																"value": "@pipeline().DataFactory",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipeline": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"runid": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"runstatus": {
															"value": "Latest Date Folders are not available",
															"type": "String"
														},
														"runtime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_logdetailsSP",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Check Date Folder Status",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "Check Date",
													"value": "Satisfied"
												}
											}
										]
									}
								},
								{
									"name": "Until files available_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Check Latest Date Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_until_files_available",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataFolders": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata of Department dataland",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Getmetdata_Dataland",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop Departments",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of Department dataland",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of Department dataland').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Metadata of Department File",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_Get_Metadata_Department",
											"type": "DatasetReference",
											"parameters": {
												"DepartmentFilename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Load Department data",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get Metadata of Department File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_load_department_data",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"departmentfilename": {
												"value": "@activity('Get Metadata of Department File').output.childItems",
												"type": "Expression"
											},
											"DateFolder": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata of Employee",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Log department data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Get_Employee_Date_Folders",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop Employee",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of Employee').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Employee source files",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_Get_Employee_Source_Files",
											"type": "DatasetReference",
											"parameters": {
												"DateFolders": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Load Employee",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get Employee source files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_load_employee_data",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"departmentfilename": {
												"value": "@activity('Get Employee source files').output.childItems",
												"type": "Expression"
											},
											"DateFolder": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Log department data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop Departments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineStatus]",
							"storedProcedureParameters": {
								"adfname": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"runstatus": {
									"value": "Department data loaded successfully",
									"type": "String"
								},
								"runtime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_logdetailsSP",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Employee Data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogPipelineStatus]",
							"storedProcedureParameters": {
								"adfname": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"runstatus": {
									"value": "Employee data loaded successfully",
									"type": "String"
								},
								"runtime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_logdetailsSP",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Log Employee Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "pl_generate_adhoc_report",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employee": {},
									"Department": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Print": {
						"type": "String"
					},
					"diff1": {
						"type": "Integer"
					},
					"Check Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF POC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/pl_generate_adhoc_report')]",
				"[concat(variables('factoryId'), '/pipelines/pl_until_files_available')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_main",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_file_existance",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADF POC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_file_existance')]"
			]
		}
	]
}