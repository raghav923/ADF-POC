{
	"name": "pl_file_existance",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata of files",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_File_Check",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Loop",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata of files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata of files').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().name,formatDateTime(utcNow(),'yyyyMMdd')))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Get available trigger files",
										"type": "GetMetadata",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DS_Get_Date_Folders",
												"type": "DatasetReference",
												"parameters": {
													"BlobName": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"fieldList": [
												"childItems",
												"lastModified"
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										}
									},
									{
										"name": "Get Count",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Get available trigger files",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "Declare @json1 nvarchar(max)\nSet @json1 = '@{activity('Get available trigger files').output.childItems}'\nselect count(*) as cnt from openjson(@json1)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "AzureSqlTable1",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "pl_get_count",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Get Diff",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "pl_get_latest_files",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"getcount": {
													"value": "@activity('Get Count').output.firstRow.cnt",
													"type": "Expression"
												},
												"getmin": {
													"value": "@variables('Diff')",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "Get Diff",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Get Count",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "Diff",
											"value": {
												"value": "@div(sub(ticks(utcnow()), ticks(activity('Get available trigger files').output.lastModified)), 600000000)",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "until",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_until_files_available",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFolders": {
										"value": "@item().name",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"Print": {
				"type": "String"
			},
			"Diff": {
				"type": "Integer"
			},
			"diff1": {
				"type": "Integer"
			}
		},
		"folder": {
			"name": "ADF POC"
		},
		"annotations": []
	}
}