{
	"name": "pl_file_existance",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata of files",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_File_Check",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Loop",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Get Metadata of files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata of files').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Check Latest Date Blob",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().name,formatDateTime(utcNow(),'yyyyMMdd')))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Check Date Folder Status",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "Check Date",
											"value": "Satisfied"
										}
									}
								]
							}
						},
						{
							"name": "Until files available_copy1",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Check Latest Date Blob",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_until_files_available",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFolders": {
										"value": "@item().name",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Latest Date Folder is not available",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Check Latest Date Blob",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[LogPipelineStatus]",
								"storedProcedureParameters": {
									"adfname": {
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"runid": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"runstatus": {
										"value": "Latest Date Folders are not available",
										"type": "String"
									},
									"runtime": {
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_logdetailsSP",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Get Metadata of Department dataland",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Loop",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_Getmetdata_Dataland",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Loop Departments",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Get Metadata of Department dataland",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata of Department dataland').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get Metadata of Department File",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Get_Metadata_Department",
									"type": "DatasetReference",
									"parameters": {
										"DepartmentFilename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Load Department data",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Get Metadata of Department File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_load_department_data",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"departmentfilename": {
										"value": "@activity('Get Metadata of Department File').output.childItems",
										"type": "Expression"
									},
									"DateFolder": {
										"value": "@item().name",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Get Metadata of Employee",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Loop Departments",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_Get_Employee_Date_Folders",
						"type": "DatasetReference"
					},
					"fieldList": [],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Loop Employee",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata of Employee",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"activities": [
						{
							"name": "Get Employee source files",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Get_Employee_Source_Files",
									"type": "DatasetReference",
									"parameters": {
										"DateFolders": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Load Employee",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Get Employee source files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_load_employee_data",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"departmentfilename": {
										"value": "@activity('Get Employee source files').output.childItems",
										"type": "Expression"
									},
									"DateFolder": {
										"value": "@item().name",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"Print": {
				"type": "String"
			},
			"diff1": {
				"type": "Integer"
			},
			"Check Date": {
				"type": "String"
			}
		},
		"folder": {
			"name": "ADF POC"
		},
		"annotations": []
	}
}